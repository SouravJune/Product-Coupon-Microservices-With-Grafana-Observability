server:
  port: 9191

#MySQL Database Configuration:
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservices?useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: Sourav#8699
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    hibernate:
      ddl-auto: update
    database: mysql
    show-sql: true

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  application:
    name: PRODUCT-SERVICE

  cloud:
    config:
      uri: http://localhost:8088
      optional: true

#Fault Tolerance Retry Configuration:
resilience4j:
  retry:
    instances:
      productService:
        maxAttempts: 2
        waitDuration: 3s

#Actuator Endpoint Configuration:
management:
  #Prometheus Configuration:
  observations:
    key-values:
      application: PRODUCT-SERVICE

#Logging Visibility Configuration:
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

# While multiple instances are running if we change any configuration
# we need to refresh all the running instance og the application
# using @RefreshScope annotation and need to hit /actuator/refresh
# and we need to hit /actuator/refresh end point for all the running instance
# so to solve this problem we have spring-cloud-bus using this we can
# refresh any instance by hitting /actuator/bus-refresh and all the instance
# will get the updated configuration.
com:
  ms:
    spring-cloud:
      prop: local-bus